import { useState } from "react"
import { useNavigate } from "react-router-dom"
import { useSelector, useDispatch } from "react-redux"
import type { RootState } from "../../store/store"
import { scanQRForBorrow } from "../../store/slices/booksSlice"
import { MainHeader } from "../../Components/MainHeader"
import "./MainPage.scss"

export function MainPage() {
  const navigate = useNavigate()
  const dispatch = useDispatch()
  const { user } = useSelector((state: RootState) => state.auth)
  const [showQRScanner, setShowQRScanner] = useState(false)
  const [scannedQR, setScannedQR] = useState("")

  const handleBorrowBook = () => {
    setShowQRScanner(true)
  }

  const handleReturnBook = () => {
    navigate("/library")
  }

  const handleAdminPanel = () => {
    navigate("/admin")
  }

  const handleQRScan = () => {
    if (scannedQR.trim() && user) {
      dispatch(scanQRForBorrow({ qrData: scannedQR, userId: user.id }))
      setShowQRScanner(false)
      setScannedQR("")
      alert("QR –∫–æ–¥ –æ—Ç—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω! –ó–∞–ø—Ä–æ—Å –Ω–∞ –≤—ã–¥–∞—á—É –∫–Ω–∏–≥–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.")
    }
  }

  return (
    <div className="main-page">
      <MainHeader />
      <div className="main-content">
        <div className="photo-placeholder">
          <div className="photo-circle">
            <img className="camera-icon" src="/images/camera.svg" alt="Camera" />
          </div>
        </div>

        <div className="action-buttons">
          {user?.role !== "admin" && (
            <>
              <button className="action-button borrow" onClick={handleBorrowBook}>
                –í–∑—è—Ç—å –∫–Ω–∏–≥—É
              </button>

              <button className="action-button return" onClick={handleReturnBook}>
                –°–¥–∞—Ç—å –∫–Ω–∏–≥—É
              </button>
            </>
          )}

          {user?.role === "admin" && (
            <button className="action-button admin" onClick={handleAdminPanel}>
              –ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å
            </button>
          )}
        </div>

        {showQRScanner && (
          <div className="qr-scanner-modal">
            <div className="qr-scanner-content">
              <h3>–°–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ QR –∫–æ–¥–∞</h3>
              <div className="camera-placeholder">
                <p>üì∑ –ö–∞–º–µ—Ä–∞ –¥–ª—è —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è QR –∫–æ–¥–∞</p>
                <p>–ù–∞–≤–µ–¥–∏—Ç–µ –∫–∞–º–µ—Ä—É –Ω–∞ QR –∫–æ–¥ –∫–Ω–∏–≥–∏</p>
              </div>
              <div className="qr-input">
                <input
                  type="text"
                  placeholder="–ò–ª–∏ –≤–≤–µ–¥–∏—Ç–µ –∫–æ–¥ –≤—Ä—É—á–Ω—É—é..."
                  value={scannedQR}
                  onChange={(e) => setScannedQR(e.target.value)}
                />
                <button onClick={handleQRScan} disabled={!scannedQR.trim()}>
                  –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å
                </button>
              </div>
              <button className="close-scanner" onClick={() => setShowQRScanner(false)}>
                –ó–∞–∫—Ä—ã—Ç—å
              </button>
            </div>
          </div>
        )}
      </div>
    </div>
  )
}
